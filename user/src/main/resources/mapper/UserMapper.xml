<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="work.kaiyu.wms.dao.UserDao">
    <resultMap id="BaseResultMap" type="work.kaiyu.wms.domain.User">
        <id column="userId" jdbcType="BIGINT" property="userId" />
        <result column="userCode" jdbcType="VARCHAR" property="userCode" />
        <result column="userPassword" jdbcType="VARCHAR" property="userPassword" />
        <result column="userName" jdbcType="VARCHAR" property="userName" />
        <result column="userMobile" jdbcType="VARCHAR" property="userMobile" />
        <result column="userEmail" jdbcType="VARCHAR" property="userEmail" />
        <result column="resourceCode" jdbcType="VARCHAR" property="resourceCode" />
        <result column="departmentId" jdbcType="BIGINT" property="departmentId" />
        <result column="userRoleId" jdbcType="BIGINT" property="userRoleId" />
        <result column="createdBy" jdbcType="BIGINT" property="createdBy" />
        <result column="creationDate" jdbcType="TIMESTAMP" property="creationDate" />
        <result column="modifyBy" jdbcType="BIGINT" property="modifyBy" />
        <result column="modifyDate" jdbcType="TIMESTAMP" property="modifyDate" />
    </resultMap>
    <resultMap id="WithDetailResultMap" type="work.kaiyu.wms.domain.User">
        <id column="userId" jdbcType="BIGINT" property="userId" />
        <result column="userCode" jdbcType="VARCHAR" property="userCode" />
        <result column="userPassword" jdbcType="VARCHAR" property="userPassword" />
        <result column="userName" jdbcType="VARCHAR" property="userName" />
        <result column="userMobile" jdbcType="VARCHAR" property="userMobile" />
        <result column="userEmail" jdbcType="VARCHAR" property="userEmail" />
        <result column="resourceCode" jdbcType="VARCHAR" property="resourceCode" />
        <result column="departmentId" jdbcType="BIGINT" property="departmentId" />
        <result column="userRoleId" jdbcType="BIGINT" property="userRoleId" />
        <result column="createdBy" jdbcType="BIGINT" property="createdBy" />
        <result column="creationDate" jdbcType="TIMESTAMP" property="creationDate" />
        <result column="modifyBy" jdbcType="BIGINT" property="modifyBy" />
        <result column="modifyDate" jdbcType="TIMESTAMP" property="modifyDate" />
        <!--指定联合查询出的其他字段 -->
        <association property="department" javaType="work.kaiyu.wms.domain.Department">
            <id column="departmentId" jdbcType="BIGINT" property="departmentId" />
            <result column="departmentName" jdbcType="VARCHAR" property="departmentName" />
            <result column="departmentManager" jdbcType="BIGINT" property="departmentManager" />
        </association>
        <association property="userRole" javaType="work.kaiyu.wms.domain.UserRole">
            <id column="userRoleId" jdbcType="BIGINT" property="userRoleId" />
            <result column="userRoleName" jdbcType="VARCHAR" property="userRoleName" />
            <result column="userRoleAuthority" jdbcType="BIGINT" property="userRoleAuthority" />
            <result column="createdBy" jdbcType="BIGINT" property="createdBy" />
            <result column="creationDate" jdbcType="TIMESTAMP" property="creationDate" />
            <result column="modifyBy" jdbcType="BIGINT" property="modifyBy" />
            <result column="modifyDate" jdbcType="TIMESTAMP" property="modifyDate" />
        </association>
    </resultMap>
    <!--用户完整字段    -->
    <sql id="Base_Column_List">
        userId,userCode,userPassword,userName,userMobile,userEmail,resourceCode,departmentId,userRoleId, createdBy, creationDate, modifyBy, modifyDate
    </sql>
    <!--用户简单字段  -->
    <sql id="Simple_Column_List">
        userId,userCode,userPassword,userName,userMobile,userEmail,resourceCode,departmentId,userRoleId
    </sql>
    <!--用户简单字段除了密码    -->
    <sql id="Simple_Column_List_WithOut_PASSWORD">
        userId,userCode,userName,userMobile,userEmail,resourceCode,departmentId,userRoleId
    </sql>
    <!--用户连表基础信息字段    -->
    <sql id="With_SimpleDetail_Column_List">
        u.userCode,u.userName,u.userMobile,u.resourceCode,d.departmentName,u_r.userRoleName
    </sql>
    <sql id="With_Detail_Column_List">
        u.userId,
        u.userCode,
        u.userPassword,
        u.userName,
        u.userMobile,
        u.userEmail,
        u.resourceCode,
        d.departmentId,
        d.departmentName,
        u_r.userRoleId,
        u_r.userRoleName,
        u_r.userRoleAuthority
    </sql>
    <!--用户插入字段    -->
    <sql id="Insert_Column_List">
        userCode,userPassword,userName,departmentId,userRoleId,createdBy
    </sql>
    <!--    -->
    <select id="queryAllUserForSimple" resultMap="BaseResultMap">
        SELECT <include refid="Base_Column_List"/>
        FROM `user`
    </select>
    <!--    -->
    <select id="queryAllUserForSimpleDetail" resultMap="WithDetailResultMap">
        SELECT <include refid="With_SimpleDetail_Column_List"/>
        FROM
            `user` AS u
            LEFT JOIN ( SELECT departmentId, departmentName FROM `department` ) AS d ON u.departmentId = d.departmentId
            LEFT JOIN ( SELECT userRoleId, userRoleName FROM `user_role` ) AS u_r ON u.userRoleId = u_r.userRoleId
        ORDER BY
            u.userId
    </select>
    <!--    -->
    <select id="queryAllUserForDetail" resultMap="WithDetailResultMap">
        SELECT <include refid="With_Detail_Column_List"/>
        FROM `user` AS u
        LEFT JOIN ( SELECT departmentId, departmentName FROM `department` ) AS d ON u.departmentId = d.departmentId
        LEFT JOIN ( SELECT userRoleId, userRoleName,userRoleAuthority FROM `user_role` ) AS u_r ON u.userRoleId = u_r.userRoleId
        ORDER BY u.userId
    </select>
    <!--用户登录信息检查    -->
    <select id="checkUserLoginByUserCode" parameterType="java.lang.String" resultMap="WithDetailResultMap">
        SELECT <include refid="With_Detail_Column_List"/>
        FROM
            (
                SELECT <include refid="Simple_Column_List"/>
                FROM `user` WHERE userCode = #{userCode} AND userPassword = #{userPassword}
            ) AS u
        LEFT JOIN ( SELECT departmentId, departmentName FROM `department` ) AS d ON u.departmentId = d.departmentId
        LEFT JOIN ( SELECT userRoleId, userRoleName, userRoleAuthority FROM `user_role` ) AS u_r ON u.userRoleId = u_r.userRoleId
    </select>

    <!--检查用户是否存在    -->
    <select id="checkIfTheUserCodeExists" parameterType="java.lang.String" resultType="java.lang.Long" >
        SELECT userId
        FROM `user`
        WHERE userCode=#{userCode}
    </select>

    <insert id="insertUser" parameterType="work.kaiyu.wms.domain.User">
        INSERT INTO user(<include refid="Insert_Column_List"/>)
        VALUES (
        #{userCode},
        #{userPassword},
        #{userName},
        #{departmentId},
        #{userRoleId},
        #{createdBy});
    </insert>
    <update id="updateUserInfo" parameterType="work.kaiyu.wms.domain.User">
        UPDATE user
        <set>
            <trim suffixOverrides=",">
                <if test="userName != null">
                    userName = #{userName,jdbcType=VARCHAR},
                </if>
                <if test="userMobile != null">
                    userMobile = #{userMobile,jdbcType=VARCHAR},
                </if>
            </trim>
        </set>
        WHERE userId = #{userId,jdbcType=BIGINT}
    </update>
</mapper>